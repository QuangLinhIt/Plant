<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="100% Money Back Guarantee" xml:space="preserve">
    <value>100% Money Back Guarantee</value>
  </data>
  <data name="Creative Design" xml:space="preserve">
    <value>Creative Design</value>
  </data>
  <data name="doi ngu nhan vien" xml:space="preserve">
    <value>With a team of dedicated, enthusiastic, dynamic and creative staff combined with experienced artisans, we will bring customers the most satisfactory products, clearly understanding their aesthetic needs. and the function of the project.</value>
  </data>
  <data name="home" xml:space="preserve">
    <value>Home</value>
  </data>
  <data name="introduction" xml:space="preserve">
    <value>Introduction</value>
  </data>
  <data name="ket luan1" xml:space="preserve">
    <value>Together with &lt;u style="color:lawngreen"&gt;Lucky BamBoo&lt;/u&gt; store, you will see that humans and nature are two unified entities that are always close and attractive, and that relationship always exists side by side in our living space. Architecture and Nature always complement each other, are closely linked and enhance each other. Each pot of ornamental flowers is always a close, beautiful and carefree friend. Please join us in our efforts to make your beloved home more attractive. It is our city's success to have a friendly environment. your strength.</value>
  </data>
  <data name="ket luan2" xml:space="preserve">
    <value>&lt;u style="color:lawngreen"&gt;Lucky BamBoo&lt;/u&gt; store always learns, explores and works hard for the betterment of life. We strive to create excellence, and openly share our abilities with the whole community to always hope for friendly things.</value>
  </data>
  <data name="Online Support 24/7" xml:space="preserve">
    <value>Online Support 24/7</value>
  </data>
  <data name="sang tao" xml:space="preserve">
    <value>With the creativity of our leaders and professional engineers, we have created many products such as: flower varieties, flower pots, wooden tubs, frames, fountains, miniatures... with differences that few other businesses have been.</value>
  </data>
  <data name="text-1" xml:space="preserve">
    <value>Not only design consulting, but we also construct and produce and supply related products such as: flower varieties, ornamental rocks, rockery, iron art shelves, high-quality wooden pots, and composites. and types of nutrients, substrates, clean and sustainable growing soil...Producing and crafting dried ornamental plants from artistic driftwood, successfully producing unique aquatic plant products suitable for landscape decoration Modern garden. &lt;u style="color:lawngreen"&gt;Lucky BamBoo&lt;/u&gt; has become a strong business, fully functional.</value>
  </data>
  <data name="text-design" xml:space="preserve">
    <value>Always stay at the forefront of trends and update all achievements in the world</value>
  </data>
  <data name="text-introduction" xml:space="preserve">
    <value>Our business has more than 25 years of experience operating in the field of landscape and flower and ornamental plant production. Creation and construction of many key projects. Furthermore, we also research, collect and breed many unique varieties of ornamental flowers and plants. Therefore, we always confidently assert ourselves as one of the leading units in this field in Vietnam. This is a point Bright in the choice and trust of many domestic partners and Vietnamese Landscape Garden Art experts.</value>
  </data>
  <data name="text-money-back-guarantee" xml:space="preserve">
    <value>Applicable to orders after 7 days from receipt</value>
  </data>
  <data name="text-online-support" xml:space="preserve">
    <value>Always support customers with order-related issues</value>
  </data>
  <data name="tu van" xml:space="preserve">
    <value>Using existing experience, combined with youth and enthusiasm, our business always provides the most practical consulting solutions for customers. Answer all questions from flower varieties, ornamental plants, soil, plant diseases... to ecological landscape art.</value>
  </data>
</root>