@using Microsoft.AspNetCore.Mvc.Localization
@model Plant.ViewModels.OrderVm
@inject IViewLocalizer Localizer
<!--breadcrumbs area start-->
<div class="breadcrumbs_area" style=" background-image: url('../../LayoutAssets/img/slider/Indoor-House-Plant-Care.jpg') ">
    <div class="container">
        <div class="row">
            <div class="col-12">
                <div class="breadcrumb_content">
                    <h3 style="font-weight: 800; color: white; text-shadow: 0 0 0.2em black; ">@Localizer["purchase"]</h3>
                    <ul>
                        <li style="font-weight: 600; color: white; text-shadow: 0 0 0.2em black; "><a asp-area="" asp-controller="Home" asp-action="Index">@Localizer["home"]</a></li>
                        <li style="font-weight: 600; color: white; text-shadow: 0 0 0.2em black; "><a asp-area="" asp-controller="Orders" asp-action="Cart">@Localizer["order"]</a></li>
                        <li style="font-weight: 600; color: yellowgreen; text-shadow: 0 0 0.2em black; ">@Localizer["purchase"]</li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
</div>
<!--breadcrumbs area end-->
<!--Checkout page section-->
<form method="post" asp-action="Order">
    <div class="Checkout_section  mt-100" id="accordion">
        <div class="container">
            <div class="checkout_form row">
                <div class="col-lg-6 col-md-6">
                    <h3>@Localizer["person infor"]</h3>
                    <div class="row">
                        <div class="col-lg-6 col-md-6 col-sm-12 mb-20">
                            <label>@Localizer["lastname"]</label>
                            <input type="text" asp-for="LastName" autocomplete="off">
                        </div>
                        <div class="col-lg-6 col-md-6 col-sm-12 mb-20">
                            <label>@Localizer["firstname"]</label>
                            <input type="text" asp-for="FirstName" autocomplete="off">
                        </div>
                        <div class="col-lg-12 col-md-12 col-sm-12 mb-20">
                            <label>Email</label>
                            <input type="email" asp-for="Email" readonly>
                        </div>
                        <div class="col-lg-12 col-md-12 col-sm-12 mb-20">
                            <label>PhoneNumber</label>
                            <input type="number" asp-for="Phone" autocomplete="off">
                        </div>
                    </div>
                    <h3>@Localizer["delivery address"]</h3>
                    <div class="row">
                        <div class="col-lg-6 col-md-12 col-sm-12 mb-20">
                            <label>@Localizer["city"]</label>
                            <select class="form-control" id="addressCity" onchange="GetCitySelected()" asp-for="City">
                                @if (Model.City != 0)
                                {
                                    <option value="@Model.City" id="optionAddressCity"></option>
                                }
                                else
                                {
                                    <option value="0">@Localizer["choose city"]</option>
                                }
                            </select>
                        </div>
                        <div class="col-lg-6 col-md-12 col-sm-12 mb-20">
                            <label>@Localizer["district"]</label>
                            <select class="form-control" id="addressDistrict" onchange="GetDistrictSelected()" asp-for="District">
                                @if (Model.District != 0)
                                {
                                    <option value="@Model.District" id="optionAddressDistrict"></option>
                                }
                                else
                                {
                                    <option value="0">@Localizer["choose district"]</option>
                                }
                            </select>
                        </div>
                        <div class="col-lg-6 col-md-12 col-sm-12 mb-20">
                            <label>@Localizer["ward"]</label>
                            <select class="form-control" id="addressWard" asp-for="Ward">
                                @if (Model.Ward != 0)
                                {
                                    <option value="@Model.Ward" id="optionAddressWard"></option>
                                }
                                else
                                {
                                    <option value="0">@Localizer["choose ward"]</option>
                                }
                            </select>
                        </div>
                        <div class="col-lg-6 col-md-12 col-sm-12 mb-20">
                            <label>@Localizer["road"]</label>
                            <input type="text" class="form-control" asp-for="Road" required autocomplete="off">
                        </div>
                    </div>
                </div>
                <div class="col-lg-6 col-md-6">
                    <div class="order_table table-responsive">
                        <table>
                            <thead>
                                <tr>
                                    <th>@Localizer["your order"]</th>
                                    <th>@Localizer["money"]</th>
                                </tr>
                            </thead>
                            <tbody id="cartDoneTbody">
                                @*script show localStorage*@
                            </tbody>
                            <tfoot>
                                <tr>
                                    <th>@Localizer["cart subtotal"]</th>
                                    <td id="totalCostOfGoods">
                                    </td>
                                </tr>
                                <tr>
                                    <th>@Localizer["shipping"]</th>
                                    <td>50.000 đ</td>
                                </tr>
                                <tr class="order_total">
                                    <th>@Localizer["total"]</th>
                                    <td id="totalPaymentGoods" name="Total">
                                    </td>
                                </tr>
                            </tfoot>
                        </table>
                    </div>
                </div>
            </div>
        </div>
        <div class="order_button" style="text-align:center;">
            <input type="submit" name="payment" class="btn btn-success" value="Đặt hàng (COD)" onclick="RemovePurchasedProduct()" />
            <input type="submit" name="payment" class="btn btn-success" value="Thanh toán VNPAY" onclick="RemovePurchasedProduct()" />
        </div>
    </div>
</form>
<!--Checkout page section end-->

@section Scripts{
    <script src="~/localStorage/localStorage.js"></script>
    <script>
        var selectCity = document.getElementById('addressCity');
        var selectDistrict = document.getElementById('addressDistrict');
        var selectWard = document.getElementById('addressWard');
        var optionSelectedCity = document.getElementById('optionAddressCity');
        var optionSelectedDistrict = document.getElementById('optionAddressDistrict');
        var optionSelectedWard = document.getElementById('optionAddressWard');

        //show option of  city in file json
        fetch('/AdminAssets/vendors/bizmac-customjs/city.json')
            .then(response => response.json())
            .then(data => {
                for (var i = 0; i < data.length; i++) {
                    var optionCity = document.createElement('option');
                    optionCity.value = data[i].code;
                    optionCity.text = data[i].name_with_type;
                    selectCity.appendChild(optionCity);
                }
                //show selected city if have value
                for (var i = 0; i < data.length; i++) {
                    if (optionSelectedCity.value == data[i].code) {
                        optionSelectedCity.textContent = data[i].name_with_type;
                    }
                }
            })
            .catch(error => {
                // Handle any errors that occur during the fetch
                console.error('Error:', error);
            });

        //show option selected of district
        fetch(`/AdminAssets/vendors/bizmac-customjs/district/${optionSelectedCity.value}.json`)
            .then(response => response.json())
            .then(data => {
                //show district if have value
                for (var i = 0; i < data.length; i++) {
                    if (optionSelectedDistrict.value == data[i].code) {
                        optionSelectedDistrict.textContent = data[i].name_with_type;
                    }
                }
            })
            .catch(error => {
                // Handle any errors that occur during the fetch
                console.error('Error:', error);
            });

        //show option selected of ward
        fetch(`/AdminAssets/vendors/bizmac-customjs/ward/${optionSelectedDistrict.value}.json`)
            .then(response => response.json())
            .then(data => {
                //show district if have value
                for (var i = 0; i < data.length; i++) {
                    if (optionSelectedWard.value == data[i].code) {
                        optionSelectedWard.textContent = data[i].name_with_type;
                    }
                }
            })
            .catch(error => {
                // Handle any errors that occur during the fetch
                console.error('Error:', error);
            });
        function GetCitySelected() {
            if (selectCity.value != 0) {
                fetch(`/AdminAssets/vendors/bizmac-customjs/district/${selectCity.value}.json`)
                    .then(response => response.json())
                    .then(data => {
                        //show option of district when choose value city != 0
                        selectDistrict.innerHTML = '';
                        var optionDistrict = document.createElement('option');
                        optionDistrict.value = 0;
                        optionDistrict.text = "Chọn quận, huyện...";
                        selectDistrict.appendChild(optionDistrict);
                        for (var i = 0; i < data.length; i++) {
                            var optionDistrict = document.createElement('option');
                            optionDistrict.value = data[i].code;
                            optionDistrict.text = data[i].name_with_type;
                            selectDistrict.appendChild(optionDistrict);
                        }
                        //district change set option ward value=0
                        selectWard.innerHTML = '';
                        var optionWard = document.createElement('option');
                        optionWard.value = 0;
                        optionWard.text = "Chọn phường, xã...";
                        selectWard.appendChild(optionWard);
                    })
                    .catch(error => {
                        // Handle any errors that occur during the fetch
                        console.error('Error:', error);
                    });
            } else {
                //set select district value=0
                selectDistrict.innerHTML = '';
                var optionDistrict = document.createElement('option');
                optionDistrict.value = 0;
                optionDistrict.text = "Chọn quận, huyện...";
                selectDistrict.appendChild(optionDistrict);
                //set select ward value=0
                selectWard.innerHTML = '';
                var optionWard = document.createElement('option');
                optionWard.value = 0;
                optionWard.text = "Chọn phường, xã...";
                selectWard.appendChild(optionWard);
            }
        }
        function GetDistrictSelected() {
            if (selectDistrict.value != 0) {
                fetch(`/AdminAssets/vendors/bizmac-customjs/ward/${selectDistrict.value}.json`)
                    .then(response => response.json())
                    .then(data => {
                        //show option ward when district have value
                        selectWard.innerHTML = '';
                        var optionWard = document.createElement('option');
                        optionWard.value = 0;
                        optionWard.text = "Chọn phường, xã...";
                        selectWard.appendChild(optionWard);
                        for (var i = 0; i < data.length; i++) {
                            var optionWard = document.createElement('option');
                            optionWard.value = data[i].code;
                            optionWard.text = data[i].name_with_type;
                            selectWard.appendChild(optionWard);
                        }
                    })
                    .catch(error => {
                        // Handle any errors that occur during the fetch
                        console.error('Error:', error);
                    });
            } else {
                selectWard.innerHTML = '';
                var optionWard = document.createElement('option');
                optionWard.value = 0;
                optionWard.text = "Chọn phường, xã...";
                selectWard.appendChild(optionWard);
            }
        }

    </script>
    <script>
        function GetProductData(productId, color) {
            return new Promise(function (resolve, reject) {
                $.ajax({
                    type: "GET",
                    async: true,
                    url: '/Orders/GetProductById',
                    dataType: 'JSON',
                    data: { productId: productId, color: color },
                    success: function (product) {
                        // Resolve the promise with the received data
                        resolve(product);
                    },
                    error: function () {
                        // Reject the promise
                        reject("Error occurred while retrieving product data.");
                    }
                });
            });
        }
        var cartItemDones = GetCarts();
        var listCartDoneHtml = document.getElementById('cartDoneTbody');
        listCartDoneHtml.innerHTML = '';
        var TotalCostOfGoods = 0;
        var TotalPayments = 50000;
        var index = 0;
        cartItemDones.forEach(function (item) {
            GetProductData(item.productId, item.color)
                .then(function (product) {
                    if (product.error) {
                        alert("product not found", product.error)
                    } else if (product && product.price !== undefined) {
                        if (item.choose == true) {
                            var priceToMoney = product.price.toLocaleString('vi-VN', { style: 'currency', currency: 'VND' });
                            var cartDoneTotalToMoney = (product.price * item.quantity).toLocaleString('vi-VN', { style: 'currency', currency: 'VND' });
                            var itemCartDoneHtml = document.createElement('tr');
                            itemCartDoneHtml.innerHTML = `
                                                                                                <input type="hidden" name="ListCart[${index}].ProductId" value="${item.productId}"/>
                                                                                                <input type="hidden" name="ListCart[${index}].Quantity" value="${item.quantity}"/>
                                                                                                <input type="hidden" name="ListCart[${index}].Price" value="${product.price}"/>
                                                                                                <input type="hidden" name="ListCart[${index}].OriginalPrice" value="${product.originalPrice}"/>
                                                                                                <input type="hidden" name="ListCart[${index}].Color" value="${item.color}"/>

                                                                                                <td>
                                                                                                    <div class="cartDone_name">${product.productName}</div>
                                                                                                        <div class="cartDone_color"><i class="fa-solid fa-star"></i> ${item.color} | ${priceToMoney} | x${item.quantity}</div>
                                                                                                </td>
                                                                                                <td><div class="cartDone_total">${cartDoneTotalToMoney}</div></td >
                                                                                                `
                            listCartDoneHtml.appendChild(itemCartDoneHtml);

                            TotalCostOfGoods += product.price * item.quantity;
                            document.getElementById('totalCostOfGoods').value = TotalCostOfGoods;
                            document.getElementById('totalCostOfGoods').textContent = TotalCostOfGoods.toLocaleString('vi-VN', { style: 'currency', currency: 'VND' });

                            TotalPayments += product.price * item.quantity;
                            document.getElementById('totalPaymentGoods').value = TotalPayments;
                            document.getElementById('totalPaymentGoods').textContent = TotalPayments.toLocaleString('vi-VN', { style: 'currency', currency: 'VND' });
                            index++;
                        }
                    }
                    else {
                        // Handle the case where the product is found but price is undefined
                        console.log("Price not available for the product");
                    }
                })
                .catch(function (error) {
                    // Handle errors
                    alert("order.cshtml", error);
                });
        });
    </script>
}

